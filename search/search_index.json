{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"The Supporting Methods for Electronic Functions (SUMELF) Program","text":"<p>Authors: Dr. Geoffrey Weal<sup>*,\u2020</sup>, Dr. Chayanit Wechwithayakhlung<sup>\u2020</sup>, Dr. Josh Sutton<sup>*</sup>, Dr. Daniel Packwood<sup>\u2020</sup>, Dr. Paul Hume<sup>*</sup>, Prof. Justin Hodgkiss<sup>*</sup></p> <p><sup>*</sup> Victoria University of Wellington, Wellington, New Zealand; The MacDiarmid Institute for Advanced Materials and Nanotechnology, Wellington, New Zealand. </p> <p><sup>\u2020</sup> Institute for Integrated Cell-Material Sciences (iCeMS), Kyoto University, Kyoto, Japan.</p> <p>Group pages: https://people.wgtn.ac.nz/paul.hume/grants, https://www.packwood.icems.kyoto-u.ac.jp/, https://people.wgtn.ac.nz/justin.hodgkiss/grants</p>"},{"location":"index.html#what-is-the-supporting-methods-for-electronic-functions-sumelf-program","title":"What is the Supporting Methods for Electronic Functions (SUMELF) Program","text":"<p>The Supporting Methods for Electronic Functions (SUMELF) program contains various supporting program that are used by various programs. This includes:</p> <p>ACSD: The Access Cambridge Structural Database Program</p> <ul> <li>Used to collect crystals directly from the CCDC. </li> </ul> <p>ReCrystals: The Repair Crystals Program</p> <ul> <li>Used to repair and modify the molecules in the crystal.</li> </ul> <p>RSGC: The Remove SideGroups from Crystals Program</p> <ul> <li>Used to remove sidegroups from the crystals, in particular aliphatic sidechains that are not significant to semiconductor properties and can make electronic calculations difficult. </li> </ul> <p>ECCP: The Electronic Crystal Calculation Prep Program</p> <ul> <li>Used to extract the molecules from the crystal and collect electronic calculation data for understanding coupling, charge-transfer, and energy-trasnfer for exciton and charge diffusion.</li> </ul> <p>EKMC: The Exciton Kinetic Monte Carlo Program</p> <ul> <li>Used to simulate exciton diffusion using kinetic Monte Carlo.</li> </ul> <p>SORE: The Sum-Over-Rates Equation Program</p> <ul> <li>Used to simulate exciton diffusion using a simple sum-over-rate equation model. </li> </ul>"},{"location":"index.html#installation","title":"Installation","text":"<p>It is recommended to read the installation page before using the SUMELF program. See Installation: Setting Up SUMELF and Pre-Requisites Packages for more information. Note that you can install SUMELF through <code>pip3</code> and <code>conda</code>. </p>"},{"location":"index.html#guide-to-using-sumelf","title":"Guide To Using SUMELF","text":"<p>The SUMELF program contains methods used for multiple programs, so you don't use SUMELF directly. However, SUMELF does contain several modules that can be helpful across these programs. See How To Use The SUMELF Program to learn about how to use these modules. </p>"},{"location":"index.html#the-grand-scheme","title":"The Grand Scheme","text":"<p>The SUMELF program is used as part of a grand scheme for calculating the excited-state electronic properties of molecules in a crystal. This includes simulations of exciton and charge diffusion through crystal structures, in particular for organic molecules (but not limited to them). This scheme is shown below, along with where the SUMELF program is used in this scheme. </p> <p> </p>"},{"location":"Installation.html","title":"Installation","text":"<p>In this article, we will look at how to install the SUMELF program and all requisites required for this program.</p>"},{"location":"Installation.html#pre-requisites","title":"Pre-requisites","text":""},{"location":"Installation.html#python-3-and-pip3","title":"Python 3 and <code>pip3</code>","text":"<p>This program is designed to work with Python 3. This program can only be used with Python 3.7. This is because the CSD Python API can only run using Python 3.7. </p> <p>To find out if you have Python 3 on your computer and what version you have, type into the terminal</p> <pre><code>python --version\n</code></pre> <p>If you have Python 3 on your computer, you will get the version of python you have on your computer. E.g.</p> <pre><code>user@computer_name path % python --version\nPython 3.7.9\n</code></pre> <p>If you have Python 3, you may have <code>pip</code> installed on your computer as well. <code>pip</code> is a python package installation tool that is recommended by Python for installing Python packages. To see if you have <code>pip</code> installed, type into the terminal</p> <p><pre><code>pip list\n</code></pre> If you get back a list of python packages install on your computer, you have <code>pip</code> installed. E.g.</p> <pre><code>user@computer_name Documentation % pip3 list\nPackage                       Version\n----------------------------- ---------\nalabaster                     0.7.12\nasap3                         3.11.10\nase                           3.20.1\nBabel                         2.8.0\ncertifi                       2020.6.20\nchardet                       3.0.4\nclick                         7.1.2\ncycler                        0.10.0\ndocutils                      0.16\nFlask                         1.1.2\nidna                          2.10\nimagesize                     1.2.0\nitsdangerous                  1.1.0\nJinja2                        2.11.2\nkiwisolver                    1.2.0\nMarkupSafe                    1.1.1\nmatplotlib                    3.3.1\nnumpy                         1.19.1\npackaging                     20.4\nPillow                        7.2.0\npip                           20.2.4\nPygments                      2.7.1\npyparsing                     2.4.7\npython-dateutil               2.8.1\npytz                          2020.1\nrequests                      2.24.0\nscipy                         1.5.2\nsetuptools                    41.2.0\nsix                           1.15.0\nsnowballstemmer               2.0.0\nSphinx                        3.2.1\nsphinx-pyreverse              0.0.13\nsphinx-rtd-theme              0.5.0\nsphinx-tabs                   1.3.0\nsphinxcontrib-applehelp       1.0.2\nsphinxcontrib-devhelp         1.0.2\nsphinxcontrib-htmlhelp        1.0.3\nsphinxcontrib-jsmath          1.0.1\nsphinxcontrib-plantuml        0.18.1\nsphinxcontrib-qthelp          1.0.3\nsphinxcontrib-serializinghtml 1.1.4\nsphinxcontrib-websupport      1.2.4\nurllib3                       1.25.10\nWerkzeug                      1.0.1\nwheel                         0.33.1\nxlrd                          1.2.0\n</code></pre> <p>If you do not see this, you probably do not have <code>pip</code> installed on your computer. If this is the case, check out PIP Installation. </p> <p>Note</p> <p>In most cases, <code>pip</code> and <code>pip3</code> are synonymous for the Python Installation Package for Python 3. However in some cases, <code>pip</code> will be directed to the Python Installation Package for Python 2 rather than Python 3. To check this, run in the terminal:</p> <pre><code>pip --version\n</code></pre> <p>If the output indicates you this Python Installation Package is for Python 2 and not Python 3, only install packages using the <code>pip3</code> name. </p> <p>For the rest of this documentation, <code>pip</code> will be used, however if your computer's <code>pip</code>  refers to Python 2 and not Python 3, use <code>pip3</code>  instead of <code>pip</code>. </p>"},{"location":"Installation.html#atomic-simulation-environment-ase","title":"Atomic Simulation Environment (ASE)","text":"<p>The SUMELF program uses the Atomic Simulation Environment (ASE) to read in the crystal data from various file format, to process the crystals, and to save the the crystals to disk. Read more about ASE here. </p> <p>The installation of ASE can be found on the ASE installation page, however from experience if you are using ASE for the first time, it is best to install ASE using <code>pip</code>, the package manager that is an extension of python to keep all your program easily managed and easy to import into your python. </p> <p>To install ASE using <code>pip</code>, perform the following in your terminal.</p> <pre><code>pip install --upgrade --user ase\n</code></pre> <p>Installing using <code>pip</code> ensures that ASE is being installed to be used by Python 3, and not Python 2. Installing ASE like this will also install all the requisite program needed for ASE. This installation includes the use of features such as viewing the xyz files of structure and looking at ase databases through a website. These should be already assessible, which you can test by entering into the terminal:</p> <pre><code>ase gui\n</code></pre> <p>This should show a GUI with nothing in it, as shown below.</p> This is a blank ase gui screen that you would see if enter ase gui into the terminal. <p>However, in the case that this does not work, we need to manually add a path to your <code>~/.bashrc</code> so you can use the ASE features externally outside python. Do the following; first enter the following into the terminal:</p> <pre><code>pip show ase\n</code></pre> <p>This will give a bunch of information, including the location of ase on your computer. For example, when I do this I get:</p> <pre><code>user@computer_name docs % pip show ase\nName: ase\nVersion: 3.20.1\nSummary: Atomic Simulation Environment\nHome-page: https://wiki.fysik.dtu.dk/ase\nAuthor: None\nAuthor-email: None\nLicense: LGPLv2.1+\nLocation: /Users/geoffreyweal/Library/Python/3.7/lib/python/site-packages\nRequires: matplotlib, scipy, numpy\nRequired-by: \n</code></pre> <p>Copy the <code>Location</code> line. If we remove the <code>lib/python/site-packages</code> bit and replace it with <code>bin</code>, this gives us the location of useful ASE programs. The example below is for Python 3.7. </p> <pre><code>/Users/geoffreyweal/Library/Python/3.7/bin\n</code></pre> <p>Next, add this to your <code>~/.bashrc</code> file as below:</p> <pre><code>############################################################\n# For ASE\nexport PATH=/Users/geoffreyweal/Library/Python/3.7/bin:$PATH\n############################################################\n</code></pre> <p>Write <code>source ~/.bashrc</code> in the terminal and press enter. Once you have done this, try to run <code>ase gui</code> in the terminal. This will hopefully show the ase gui and allow you to access the useful ASE programs through the terminal. </p>"},{"location":"Installation.html#networkx","title":"Networkx","text":"<p><code>Networkx</code> is a python program that is used in the SUMELF program to describe the bonding structure between atoms in the crystal structure. The easiest way to install <code>Networkx</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user networkx\n</code></pre>"},{"location":"Installation.html#packaging","title":"Packaging","text":"<p>The <code>packaging</code> program is also used in this program to check the versions of ASE that you are using for compatibility issues. The easiest way to install <code>packaging</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user packaging\n</code></pre>"},{"location":"Installation.html#pymatgen","title":"Pymatgen","text":"<p><code>Pymatgen</code> is a python program that is used in SUMELF to determine symmetric molecules within a crystal structure. The easiest way to install <code>Pymatgen</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user pymatgen\n</code></pre> <p>This package and other required packages may take a bit of time to install. </p>"},{"location":"Installation.html#tqdm","title":"TQDM","text":"<p>The <code>tqdm</code> program is used by this program to provide progress bars that are useful for easily monitoring progress during this program. The easiest way to install <code>tqdm</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user tqdm\n</code></pre>"},{"location":"Installation.html#xlsxwriter","title":"Xlsxwriter","text":"<p>The <code>xlsxwriter</code> program is used by this program to write the output data from Gaussian jobs to an excel file(s). The easiest way to install <code>xlsxwriter</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user xlsxwriter\n</code></pre>"},{"location":"Installation.html#memory-profiler","title":"Memory Profiler","text":"<p>The <code>memory_profiler</code> program is a really useful program for determining how much memory is being used by a python program or any program using python. It is used here to determine how much memory is being used to process matrix data from <code>output.log</code> files. The easiest way to install <code>memory_profiler</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user memory_profiler\n</code></pre>"},{"location":"Installation.html#setting-up-the-sumelf-program","title":"Setting up the SUMELF Program","text":"<p>There are three ways to install SUMELF on your system. These ways are described below:</p>"},{"location":"Installation.html#install-sumelf-through-pip3","title":"Install SUMELF through <code>pip3</code>","text":"<p>To install the SUMELF program using <code>pip3</code>, perform the following in your terminal:</p> <pre><code>pip3 install --upgrade --user git+https://github.com/geoffreyweal/SUMELF.git\n</code></pre> <p>To install all related programs at the same time, performing the following in your terminal: </p> <pre><code>pip3 install --upgrade --user git+https://github.com/geoffreyweal/SUMELF.git git+https://github.com/geoffreyweal/ACSD.git git+https://github.com/geoffreyweal/ReCrystals.git git+https://github.com/geoffreyweal/RSGC.git git+https://github.com/geoffreyweal/ReJig.git git+https://github.com/geoffreyweal/ECCP.git git+https://github.com/geoffreyweal/EKMC.git git+https://github.com/geoffreyweal/SORE.git\n</code></pre>"},{"location":"Installation.html#install-sumelf-through-conda","title":"Install SUMELF through <code>conda</code>","text":"<p>You can install the SUMELF program on <code>conda</code> through <code>pip</code>. Click here to see more information about installing SUMELF through <code>conda</code>.</p>"},{"location":"Installation.html#manual-installation","title":"Manual installation","text":"<p>First, download the SUMELF program to your computer. You can do this by cloning a version of this from Github, or obtaining a version of the program from the authors. If you are obtaining this program via Github, you want to <code>cd</code> to the directory that you want to place this program in on the terminal, and then clone the program from Github through the terminal as well: </p> <pre><code>cd PATH/TO/WHERE_YOU_WANT_TO_PLACE_SUMELF_ON_YOUR_COMPUTER\ngit clone https://github.com/geoffreyweal/SUMELF\n</code></pre> <p>Second, you need to change permissions to use this program by using <code>chmod</code>. In the terminal write:</p> <pre><code>chmod -R 777 SUMELF\n</code></pre> <p>Third, you will want to add a python path for the ASCD program to the <code>~/.bashrc</code> to indicate its location. You can do this by entering the following into the terminal and clicking enter:</p> <pre><code>echo '\n###################################\n# Used for the SUMELF Program\nexport PATH_TO_SUMELF=\"'$PWD'/SUMELF\" \nexport PYTHONPATH=\"$PATH_TO_SUMELF\":$PYTHONPATH\nexport PATH=\"$PATH_TO_SUMELF\"/bin:$PATH\n###################################\n' &gt;&gt; ~/.bashrc\n</code></pre> <p>You can check that this has been entered into your <code>~/.bashrc</code> file by typing <code>vim ~/.bashrc</code> into the terminal, and scrolling down to the bottom of the terminal. </p> <p>Tip</p> <p>Make sure that the path given to <code>PATH_TO_SUMELF</code> is the correct path to the SUMELF folder. </p> <p>Finally, source your <code>~/.bashrc</code> file by typing the following into the terminal and pressing the enter button:</p> <pre><code>source ~/.bashrc\n</code></pre> <p>Once you have run <code>source ~/.bashrc</code>, the SUMELF program should be all ready to go! You can check this by typing the following into the terminal:</p> <pre><code>which SUMELF\n</code></pre> <p>This should give you the path to the SUMELF program. If the terminal tells you it can not find this program, check that the path you gave for <code>PATH_TO_SUMELF</code> is the correct path to the SUMELF folder. </p>"},{"location":"Installation.html#summary-of-bashrc-input","title":"Summary of <code>~/.bashrc</code> input","text":"<p>You want to have the following in your <code>~/.bashrc</code>:</p> <pre><code>###################################\n# Used for the SUMELF Program\nexport PATH_TO_SUMELF=\"&lt;Path_to_SUMELF&gt;\" \nexport PYTHONPATH=\"$PATH_TO_SUMELF\":$PYTHONPATH\nexport PATH=\"$PATH_TO_SUMELF\"/bin:$PATH\n###################################\n</code></pre> <p>where <code>\"&lt;Path_to_SUMELF&gt;\"</code> is the directory path that you place the SUMELF program. You can find this by changing directory (<code>cd</code>) into the SUMELF folder and typing <code>pwd</code> into the terminal. This will give you the full path to the SUMELF program. </p>"},{"location":"Installation.html#other-useful-commands","title":"Other Useful Commands","text":"<p>There are several commands that are useful for running all the programs in the grand scheme for simulating/calculating exciton and charge diffusion. </p>"},{"location":"Installation.html#the-qme-command","title":"The <code>qme</code> command","text":"<p>You may use <code>squeue</code> to figure out what jobs are running in slurm. For monitoring what slurm jobs are running, I have found the following alias useful. To include this in your <code>~/.bashrc</code> file, type the following into the terminal and click enter: </p> <pre><code>echo \"\nalias qme='squeue -o \\\"%.18i %.7P %.5Q %.70j %.8u %.8T %.10M %.11l %.6D %.4C %.6m %.15S %.10R %.8q\\\" -u $USER --sort=+i'\n\" &gt;&gt; ~/.bashrc\n</code></pre> <p>To run this, type <code>qme</code> into your computer. </p>"},{"location":"Installation.html#the-no_of_jobs_running_or_queued-command","title":"The <code>no_of_jobs_running_or_queued</code> command","text":"<p>The <code>no_of_jobs_running_or_queued</code> command is designed to determine the number of jobs that are either running or in the queue in slurm. </p> <p>Add this to your <code>~/.bashrc</code> file by typing the following into the terminal and pressing enter. </p> <pre><code>echo \"\nalias no_of_jobs_running_or_queued=\\\"squeue -u $USER | wc -l\\\"\n\" &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"Programs_Available_in_SUMELF.html","title":"Programs Available in SUMELF","text":"<p>The SUMELF program is designed to hold methods and modules that are used by multiple programs used in the grand scheme for simulating/calculating electronic properties as well as charge and exciton diffusion in molecular crystals. </p>"},{"location":"Programs_Available_in_SUMELF.html#the-get_molecules-module","title":"The <code>get_molecules</code> module","text":"<p>It is possible to separate a crystal into its separate molecules using the <code>get_molecules</code> module. This module will extract the individual molecules in a crystal structure, and save them into separate <code>.xyz</code> files. </p> <p>To use the <code>get_molecules</code> module, type the following into your terminal:</p> <pre><code># First, change directory into the directory contain the folder with your crystal files\ncd path_to_crystal_database\n\n# Second, run the get_molecules program:\nSUMELF get_molecules crystal_database\n</code></pre> <p>This will separate the crystal into its individual molecules, and save them as individual <code>xyz</code> file in folder called <code>crystal_database_molecules</code>. You can view these molecules using your favourite GUI viewer, mine is <code>ase gui</code> (click here for more about <code>ase gui</code>).</p> <p>NEED TO ADD OPTIONS TO THIS.</p> <p>Info</p> <p>You can also use Mercury (a CCDC program) to view the crystal. However, you will need to use the <code>get_molecules</code> to get the names of the molecules and the atom indices to make modifications to for the  <code>Repair_Crystals</code> module in the ReCrystals program</p>"},{"location":"Python_Methods_Available_in_SUMELF.html","title":"Python Methods Available in SUMELF","text":"<p>The SUMELF module contains variable methods that are used by programs, including the:</p> <ul> <li>the Access Cambridge Structural Database (ACSD) program, </li> <li>the Remove Sidechain Groups from Crystals (RSGC) program, </li> <li>the Electronic Crystal Calculation Prep (ECCP) program, and</li> <li>the Excitonic Kinetic Monte Carlo (EKMC) program.</li> </ul> <p>This page include information about each of the methods included in this module.</p> <p>If you would like to use any of the methods given in this page, you can use them by adding at the top of your python script:</p> <pre><code>from SUMELF import XYZ\n</code></pre> <p>where <code>XYZ</code> is the method you would like to use. For example, if you would like to use the  <code>process_crystal</code> method, write into your python script:</p> <pre><code>from SUMELF import process_crystal\n</code></pre> <p>If you would like to import more than one method into your program, for example, you want to import the <code>process_crystal</code>, <code>above_angle_tolerance</code>, and <code>centre_molecule_in_cell</code> methods, write at the top of your python script:</p> <pre><code>from SUMELF import process_crystal, above_angle_tolerance, centre_molecule_in_cell\n</code></pre>"},{"location":"Python_Methods_Available_in_SUMELF.html#process_crystal","title":"process_crystal","text":"<p>.. autoclass:: SUMELF.SUMELF.process_crystal.process_crystal    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#make_crystal","title":"make_crystal","text":"<p>.. autoclass:: SUMELF.SUMELF.make_crystal.make_crystal    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#make_crystal_from_molecules","title":"make_crystal_from_molecules","text":"<p>.. autoclass:: SUMELF.SUMELF.make_crystal_from_molecules.make_crystal_from_molecules    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#general_methods","title":"general_methods","text":"<p>There are numerous methods that cover many general methods that may be useful.</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#angle_methods","title":"angle_methods","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.angle_methods    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#general_molecules_methods","title":"general_molecules_methods","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.general_molecules_methods    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#get_symmetry_operations","title":"get_symmetry_operations","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.get_symmetry_operations    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#ideal_bond_lengths_and_angles_methods","title":"ideal_bond_lengths_and_angles_methods","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.ideal_bond_lengths_and_angles_methods    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#make_dimer","title":"make_dimer","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.make_dimer    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#neighbourslist_methods","title":"NeighboursList_methods","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.NeighboursList_methods    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#obtain_graph","title":"obtain_graph","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.obtain_graph    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#process_method_in_parallel","title":"process_method_in_parallel","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.process_method_in_parallel    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#remove_hydrogens","title":"remove_hydrogens","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.remove_hydrogens    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#unique_system_methods","title":"unique_system_methods","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.unique_system_methods    :members:</p>"},{"location":"Python_Methods_Available_in_SUMELF.html#unit_cell_methods","title":"unit_cell_methods","text":"<p>.. automodule:: SUMELF.SUMELF.general_methods.unit_cell_methods    :members:</p>"},{"location":"Troubleshooting.html","title":"Issues and Troubleshooting","text":"<p>The following page includes some of the issues I have faced in using the SUMELF program and some of the tips and troubleshooting advice for overcoming various difficulties. </p> <p>None so far</p>"},{"location":"Troubleshooting.html#other-issues","title":"Other Issues","text":"<p>This program is definitely a \"work in progress\". I have made it as easy to use as possible, but there are always oversights to program development and some parts of it may not be as easy to use as it could be. </p> <p>If you have any issues with the program or you think there would be better/easier ways to use and implement things in the SUMELF program, write a message on the SUMELF Github Issues page. Feedback is very much welcome!</p>"}]}